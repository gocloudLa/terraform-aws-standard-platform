title: "Complete Example"
description: "This example serves as a validation and testing template for the Terraform AWS Standard Platform, demonstrating all five layers configured with their respective AWS services and parameters. This is NOT a production-ready configuration."
main_purpose: "The main purpose is to validate and test the complete integration of GoCloud's Standard Platform with all layers (Organization, Base, Foundation, Project, and Workload) to ensure proper module functionality and dependencies."
key_features:
  - "**Layered Architecture**: Demonstrates the complete five-layer architecture (Organization, Base, Foundation, Project, Workload) with proper dependencies and configurations."
  - "**Metadata Configuration**: Shows standardized metadata structure for consistent resource naming, tagging, and environment management across all layers."
  - "**Provider Configuration**: Configures AWS providers for multiple regions including us-east-1 for CloudFront resources."
  - "**Organization Layer**: Sets up AWS Organizations management, Identity Center (SSO), and S3 backend for Terraform state management."
  - "**Base Layer**: Configures foundational networking with VPC, Route53 zones, CloudMap service discovery, and SNS notifications."
  - "**Foundation Layer**: Implements security and compliance services including ACM certificates, GitLab Runner, AWS Backup, SES, VPN (Pritunl), WAF, health monitoring, and cost control."
  - "**Project Layer**: Deploys core infrastructure services including ALB, ECS clusters, databases (RDS, Aurora, DocumentDB, ElastiCache, MemoryDB), S3 buckets, EFS, SQS, DynamoDB, and Batch processing."
  - "**Workload Layer**: Configures application-level services including static websites, ECS services, Batch jobs, and Lambda functions."
  - "**Resource Naming**: Demonstrates automatic resource naming conventions with company, environment, and project-based prefixes."
  - "**Tagging Strategy**: Shows comprehensive tagging strategy for cost allocation, compliance, and resource management."
  - "**Multi-Environment Support**: Configured for Production environment with proper domain management (public and private domains)."
  - "**Validation Purpose**: This example is designed for testing and validation of module integrations, not for direct production deployment."
